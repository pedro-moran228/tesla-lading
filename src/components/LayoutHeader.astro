---
import Logo from "./Logo.astro";

interface Props {
  color?: string;
}

const { color } = Astro.props;
---

<header id="leading-header" class="w-full flex items-center px-5 py-[12px] fixed z-50 text-transparent transition-colors duration-500 text-sm font-medium animate-fade animate-duration-500 animate-delay-[.25s]" style={{ color }}>

  <div class="flex-grow basis-0">
    <a class="block w-[7.5rem] sm:ml-6" href="/">
      <Logo />
    </a>
  </div>

  <nav class="hidden xl:block">
    <ul class="flex [&>li>a]:inline-block [&>li>a]:px-[16px] [&>li>a]:py-[6px] [&>li>a]:rounded">
      <li><a href="models">Model S</a></li>
      <li><a href="#">Model 3</a></li>
      <li><a href="#">Model X</a></li>
      <li><a href="#">Model Y</a></li>
      <li><a href="#">Solar Roof</a></li>
      <li><a href="#">Solar Panels</a></li>
      <li><a href="#">Powerwall</a></li>
    </ul>
  </nav>

  <nav class="hidden xl:flex justify-end flex-grow basis-0">
    <ul class="flex [&>li>a]:inline-block [&>li>a]:px-[16px] [&>li>a]:py-[6px] [&>li>a]:rounded">
      <li><a href="#">Shop</a></li>
      <li><a href="#">Account</a></li>
      <li><a href="#">Menu</a></li>
    </ul>
  </nav>

  <button class="inline-block bg-black/[.06] backdrop-blur-lg xl:hidden px-[16px] py-[6px] rounded hover:bg-black/[.10] transition-colors duration-300">Menu</button>

  <div id="menu-backdrop" class=`
    absolute -z-[1] bg-black/[.06] backdrop-blur-lg rounded
    left-[var(--left)] top-[var(--top)]
    w-[var(--width)] h-[var(--height)] opacity-0
    transition-all duration-500 ease-in-out
  `></div>


</header>

<script>
  const listItems = document.querySelectorAll('#leading-header li');
  const menuBackdrop = document.querySelector('#menu-backdrop') as HTMLElement;

  listItems.forEach((item, index) => {
    const { left, top, width, height } = item.getBoundingClientRect();
    item.addEventListener('mouseenter', () => {
      // menuBackdrop.style.visibility = 'visible';
      menuBackdrop.style.opacity = '1';
      menuBackdrop.style.setProperty('--left', `${left}px`);
      menuBackdrop.style.setProperty('--top', `${top}px`);
      menuBackdrop.style.setProperty('--width', `${width}px`);
      menuBackdrop.style.setProperty('--height', `${height}px`);
    });

    item.addEventListener('mouseleave', () => {
      menuBackdrop.style.opacity = '0';
      // menuBackdrop.style.visibility = 'hidden';
    });
  });
</script>